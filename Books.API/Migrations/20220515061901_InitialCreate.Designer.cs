// <auto-generated />
using Books.API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Books.API.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20220515061901_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Books.API.Models.Book", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("BookId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Author")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<string>("UrlToBook")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Books");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Author = "Mark J.Price",
                            CategoryId = 1,
                            Name = "C# 10 and .NET 6 – Modern Cross-Platform Development: Build apps, websites, and services with ASP.NET Core 6, Blazor, and EF Core 6 using Visual Studio 2022 and Visual Studio Code, 6th Edition",
                            Price = 39.159999999999997,
                            UrlToBook = "https://www.amazon.com/10-NET-Cross-Platform-Development-websites/dp/1801077363/ref=sr_1_1?keywords=.net+6+and+C%23+10&qid=1652594355&s=books&sr=1-1-catcorr"
                        },
                        new
                        {
                            Id = 2,
                            Author = "Thomas A. Garrity",
                            CategoryId = 2,
                            Name = "All the Math You Missed ((But Need to Know for Graduate School))",
                            Price = 26.359999999999999,
                            UrlToBook = "https://www.amazon.com/Math-Missed-Need-Graduate-School/dp/1009009192/ref=sr_1_4?keywords=math&qid=1652594784&s=books&sr=1-4"
                        },
                        new
                        {
                            Id = 3,
                            Author = "Mark J.Price",
                            CategoryId = 1,
                            Name = "C# 10 and .NET 6 – Modern Cross-Platform Development: Build apps, websites, and services with ASP.NET Core 6, Blazor, and EF Core 6 using Visual Studio 2022 and Visual Studio Code, 6th Edition",
                            Price = 39.159999999999997,
                            UrlToBook = "https://www.amazon.com/10-NET-Cross-Platform-Development-websites/dp/1801077363/ref=sr_1_1?keywords=.net+6+and+C%23+10&qid=1652594355&s=books&sr=1-1-catcorr"
                        },
                        new
                        {
                            Id = 4,
                            Author = "Thomas A. Garrity",
                            CategoryId = 2,
                            Name = "All the Math You Missed ((But Need to Know for Graduate School))",
                            Price = 26.359999999999999,
                            UrlToBook = "https://www.amazon.com/Math-Missed-Need-Graduate-School/dp/1009009192/ref=sr_1_4?keywords=math&qid=1652594784&s=books&sr=1-4"
                        },
                        new
                        {
                            Id = 5,
                            Author = "Mark J.Price",
                            CategoryId = 1,
                            Name = "C# 10 and .NET 6 – Modern Cross-Platform Development: Build apps, websites, and services with ASP.NET Core 6, Blazor, and EF Core 6 using Visual Studio 2022 and Visual Studio Code, 6th Edition",
                            Price = 39.159999999999997,
                            UrlToBook = "https://www.amazon.com/10-NET-Cross-Platform-Development-websites/dp/1801077363/ref=sr_1_1?keywords=.net+6+and+C%23+10&qid=1652594355&s=books&sr=1-1-catcorr"
                        },
                        new
                        {
                            Id = 6,
                            Author = "Thomas A. Garrity",
                            CategoryId = 2,
                            Name = "All the Math You Missed ((But Need to Know for Graduate School))",
                            Price = 26.359999999999999,
                            UrlToBook = "https://www.amazon.com/Math-Missed-Need-Graduate-School/dp/1009009192/ref=sr_1_4?keywords=math&qid=1652594784&s=books&sr=1-4"
                        });
                });

            modelBuilder.Entity("Books.API.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("CategoryId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Engineering"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Science"
                        });
                });

            modelBuilder.Entity("Books.API.Models.Book", b =>
                {
                    b.HasOne("Books.API.Models.Category", null)
                        .WithMany("CategoryBooks")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Books.API.Models.Category", b =>
                {
                    b.Navigation("CategoryBooks");
                });
#pragma warning restore 612, 618
        }
    }
}
